{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-e7cc743c5b208852.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","assets/animate.js","node_modules/typed.js/lib/typed.js","node_modules/mousetrap/mousetrap.js","node_modules/howler/src/howler.core.js","node_modules/@parcel/runtime-js/lib/runtime-221a9a5ed7780cd9.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kjD9z\\\":\\\"resume.17d5b774.js\\\",\\\"6Hrp4\\\":\\\"easter-egg-coin.71923cb3.wav\\\"}\"));","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","let Typed = require('typed.js');\nlet Mice = require('mousetrap')\nimport { Howl, Howler } from 'howler/src/howler.core'\n\nlet soundFile = new URL(\"easter-egg-coin.wav\", import.meta.url)\nconst sound = new Howl({\n    src: [soundFile],\n    html5: true\n});\nsound.volume(0.4);\n\n// combinations\nMousetrap.bind('command+option+1', function () {\n    toggleGame();\n    return false;\n});\n\n\nMousetrap.bind('space', function (e) {\n    if (e.preventDefault) {\n        e.preventDefault();\n    } else {\n        // internet explorer\n        e.returnValue = false;\n    }\n});\n\n\nvar cmd = new Typed('#command', {\n    stringsElement: '#cmd',\n    showCursor: false,\n    typeSpeed: 5,\n    onComplete: function (self) {\n        var foo = new Typed('#skill-tree', {\n            stringsElement: '#skills-text',\n            showCursor: false,\n            typeSpeed: 40,\n            backDelay: 0,\n            startDelay: 250\n        });\n    }\n});\n\nfunction runtime() {\nR=1152,I=1134,O=36,T=0,G=[],a=[],m=[],e=[],s=32,H='innerHTML',N=setTimeout,o=(\ni,b,c)=>i.substring(b,c),onkeydown=e=>V('1----0-2'[e.keyCode-s]),ontouchstart=\nt=>V(W(t.changedTouches.item(0).screenX/screen.width*3)),Y=(m,a)=>{a.map(i=>{h=\no(h,0,i)+m+o(h,i+1,f.length)})},C=0,L=0;M=_=>(W=Math.floor)(Math.random()*_);Q=(\nP,b)=>Array(b+1).join(P),f=Q(' ',R),p=3,N(l='A=A.map(j=>((j+=O)>R)?M(O):j==I&&\\\nL&&p--&&j||j);v()&&N(l,S)',S=64);for(A=[];C<R;)C=A[A.length-1]||0,A.push(C+M(s)+\nS);P=['~(t=','.indexOf(k))?(n[H]=(++T+\"\").fontcolor(\"E35252\"),','.splice(t,1)\\\n):'],i=':S9S08W5W06S5_04T8S3R4T02T;Q<S01SJR02RKR03RKR04R7/5/5/7R05R7/5/5/4S\\\n06R7/5/4S1S07S6/5Z08S1Z3T09U:S0<S6S0?V0AR'.split(0),N(g='j=[];while(k=G.pop\\\n()){k-=O,eval(P.join(\"e\")+P.join(\"m\")+\"(k>0)?j.push(k):0\");if(~(z=a.indexOf(\\\nk)))a.splice(z,1)}G=j;q();v()&&N(g,s)',s),q=_=>{h=f,D=[A,[I],e,m,a,G];for(F in J\n='*A#\\\\ |')Y(J[F],D[F]);for(_=O+1,z=O;z<R/O*_;z+=_)h=o(h,0,z)+'\\n'+o(h,z);b[H]=\n!v()?'win!':h,K[H]=Q('A',p>0?p:(T=0,d(),p=3))},d=_=>{e=[],m=[],a=[],r=3*O;for(c\nof i){w=r;for(u in c){if((U=c[u])=='/')m.push(w),x=1;else{x=U.charCodeAt(0)-48,E\n=x<s?'a':(x-=s)&&'e';for(y=w;y<w+x;y++)+u&&eval(E+'.push(y)')}w+=x}r+=O}},V=e=>\nN(['I=Math.max(R-36,I-1)','G.push(I)', 'I=Math.min(R-1,I+1)'][e],q(),L=1),v=_=>\nT!=150;q(d()) // Brandon Freitag, (c) 2017, freitagbr.github.io/ritopls\n}\n\nfunction toggleGame() {\n    sound.play();\n    const treeElem = document.getElementById(\"tree-output\");\n    const oElem = document.getElementById(\"game\");\n    if (oElem.classList.contains('hidden')) {\n        treeElem.classList.add('hidden')\n        runtime();\n        oElem.classList.remove('hidden')\n        oElem.classList.remove('absolute')\n    } else {\n        treeElem.classList.toggle('hidden')\n        oElem.classList.toggle('hidden')\n        N = () => {}\n    }\n}\n\ndocument.getElementById('egg').addEventListener(\"click\", toggleGame);\n","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.12\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.options.onBegin(this);\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing the current string\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, false);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.setAttribute('aria-hidden', true);\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * Before it begins typing\n\t   * @param {Typed} self\n\t   */\n\t  onBegin: function onBegin(self) {},\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n","module.exports = require('./helpers/bundle-url').getBundleURL('kjD9z') + require('./helpers/bundle-manifest').resolve(\"6Hrp4\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;"],"names":["require","register","JSON","parse","mapping","module","exports","pairs","keys","Object","i","length","resolve","id","resolved","Error","_howlerCore","Typed","Mice","soundFile","URL","sound","Howl","src","html5","volume","Mousetrap","bind","toggleGame","e","preventDefault","returnValue","cmd","stringsElement","showCursor","typeSpeed","onComplete","self","backDelay","startDelay","runtime","R","I","O","T","G","a","m","s","H","N","setTimeout","o","b","c","substring","onkeydown","V","keyCode","ontouchstart","t","W","changedTouches","item","screenX","screen","width","Y","map","h","f","C","L","M","_","Math","floor","random","Q","P","Array","join","p","l","S","A","push","split","g","q","F","D","J","z","v","K","d","r","u","U","w","x","charCodeAt","E","y","eval","play","treeElem","document","getElementById","oElem","classList","contains","add","remove","toggle","root","factory","this","modules","installedModules","__webpack_require__","moduleId","loaded","call","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_initializerJs","_htmlParserJs","elementId","options","instance","TypeError","_classCallCheck","initializer","load","begin","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","onBegin","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","currentElContent","strings","sequence","_this2","fadeOut","el","fadeOutClass","humanize","humanizer","numChars","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","isTyping","isBlinking","cursorBlinking","speed","round","shuffle","sort","_this5","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","createElement","cursorChar","insertBefore","nextSibling","obj","_extends","assign","source","hasOwnProperty","_defaultsJs","_defaultsJs2","__esModule","default","Initializer","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","trim","style","display","slice","apply","children","stringsLength","stringEl","getCurrentElContent","autoInsertCss","appendAnimationCss","cssDataName","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag","define","amd","window","_REVERSE_MAP","_MAP","_KEYCODE_MAP","_SHIFT_MAP","$","_SPECIAL_ALIASES","option","command","return","escape","plus","mod","navigator","platform","toString","callback","action","_bindMultiple","unbind","trigger","_directMap","_callbacks","stopCallback","element","indexOf","_belongsTo","composedPath","initialEventTarget","isContentEditable","handleKey","_handleKey","addKeycodes","object","init","documentMousetrap","method","_addEvent","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","_isModifier","_pickBestAction","modifiers","_getReverseMap","_getKeyInfo","combination","replace","_keysFromString","ancestor","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","modifiers1","modifiers2","matches","seq","metaKey","ctrlKey","deleteCombo","combo","deleteSequence","splice","_fireCallback","srcElement","_preventDefault","stopPropagation","cancelBubble","_stopPropagation","_handleKeyEvent","altKey","_eventModifiers","_bindSequence","_increaseSequence","nextAction","clearTimeout","_callbackAndReset","wrappedCallback","_bindSingle","info","callbacks","maxLevel","processedSequenceCallback","max","ignoreThisKeypress","combinations","HowlerGlobal","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","_soundById","_node","mute","muted","unload","close","codecs","ext","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","e1","_autoResume","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","Promise","then","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","handleSuspension","_resumeAfterSuspend","error","_autoplay","autoplay","_format","format","_html5","_loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","url","location","protocol","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","args","index","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","remCache","cache","on","events","off","isId","isArray","msg","task","shift","ended","_drain","limit","cnt","_panner","isIOS","vendor","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","decodeAudioData","XMLHttpRequest","open","responseType","forEach","setRequestHeader","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","appVersion","version","safari","global","getBundleURL","bundleURL","getBaseURL","stack","getOrigin"],"version":3,"file":"resume.17d5b774.js.map"}
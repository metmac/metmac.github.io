{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9d73b00159b9bc36.js","assets/animate.js","node_modules/howler/dist/howler.js","node_modules/typed.js/lib/typed.js","node_modules/mousetrap/mousetrap.js","node_modules/@parcel/runtime-js/lib/runtime-ab6b86e82a9b8435.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1NsUM\\\":\\\"resume.300a59a9.js\\\",\\\"3XrXP\\\":\\\"easter-egg-coin.71923cb3.wav\\\"}\"));","let Typed = require('typed.js');\nlet Mice = require('mousetrap')\nimport { Howl, Howler } from 'howler';\n\n\nlet soundFile = new URL(\"easter-egg-coin.wav\", import.meta.url)\nconst sound = new Howl({\n    src: [soundFile],\n    html5: true\n});\nsound.volume(0.4);\n\n// combinations\nMousetrap.bind('command+option+1', function () {\n    toggleGame();\n    return false;\n});\n\n\nMousetrap.bind('space', function (e) {\n    if (e.preventDefault) {\n        e.preventDefault();\n    } else {\n        // internet explorer\n        e.returnValue = false;\n    }\n});\n\n\nvar cmd = new Typed('#command', {\n    stringsElement: '#cmd',\n    showCursor: false,\n    typeSpeed: 5,\n    onComplete: function (self) {\n        var foo = new Typed('#skill-tree', {\n            stringsElement: '#skills-text',\n            showCursor: false,\n            typeSpeed: 20,\n            backDelay: 0,\n            startDelay: 1250\n        });\n    }\n});\n\n\n\nfunction runtime() {\nR=1152,I=1134,O=36,T=0,G=[],a=[],m=[],e=[],s=32,H='innerHTML',N=setTimeout,o=(\ni,b,c)=>i.substring(b,c),onkeydown=e=>V('1----0-2'[e.keyCode-s]),ontouchstart=\nt=>V(W(t.changedTouches.item(0).screenX/screen.width*3)),Y=(m,a)=>{a.map(i=>{h=\no(h,0,i)+m+o(h,i+1,f.length)})},C=0,L=0;M=_=>(W=Math.floor)(Math.random()*_);Q=(\nP,b)=>Array(b+1).join(P),f=Q(' ',R),p=3,N(l='A=A.map(j=>((j+=O)>R)?M(O):j==I&&\\\nL&&p--&&j||j);v()&&N(l,S)',S=64);for(A=[];C<R;)C=A[A.length-1]||0,A.push(C+M(s)+\nS);P=['~(t=','.indexOf(k))?(n[H]=(++T+\"\").fontcolor(\"E35252\"),','.splice(t,1)\\\n):'],i=':S9S08W5W06S5_04T8S3R4T02T;Q<S01SJR02RKR03RKR04R7/5/5/7R05R7/5/5/4S\\\n06R7/5/4S1S07S6/5Z08S1Z3T09U:S0<S6S0?V0AR'.split(0),N(g='j=[];while(k=G.pop\\\n()){k-=O,eval(P.join(\"e\")+P.join(\"m\")+\"(k>0)?j.push(k):0\");if(~(z=a.indexOf(\\\nk)))a.splice(z,1)}G=j;q();v()&&N(g,s)',s),q=_=>{h=f,D=[A,[I],e,m,a,G];for(F in J\n='*A#\\\\ |')Y(J[F],D[F]);for(_=O+1,z=O;z<R/O*_;z+=_)h=o(h,0,z)+'\\n'+o(h,z);b[H]=\n!v()?'win!':h,K[H]=Q('A',p>0?p:(T=0,d(),p=3))},d=_=>{e=[],m=[],a=[],r=3*O;for(c\nof i){w=r;for(u in c){if((U=c[u])=='/')m.push(w),x=1;else{x=U.charCodeAt(0)-48,E\n=x<s?'a':(x-=s)&&'e';for(y=w;y<w+x;y++)+u&&eval(E+'.push(y)')}w+=x}r+=O}},V=e=>\nN(['I=Math.max(R-36,I-1)','G.push(I)', 'I=Math.min(R-1,I+1)'][e],q(),L=1),v=_=>\nT!=150;q(d()) // Brandon Freitag, (c) 2017, freitagbr.github.io/ritopls\n}\n\n\nfunction toggleGame() {\n    sound.play();\n    const treeElem = document.getElementById(\"tree-output\");\n    const oElem = document.getElementById(\"game\");\n    if (oElem.classList.contains('hidden')) {\n        treeElem.classList.add('hidden')\n        runtime();\n        oElem.classList.remove('hidden')\n        oElem.classList.remove('absolute')\n    } else {\n        treeElem.classList.toggle('hidden')\n        oElem.classList.toggle('hidden')\n        N = () => {}\n    }\n}\n\ndocument.getElementById('egg').addEventListener(\"click\", toggleGame);\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.12\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.options.onBegin(this);\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing the current string\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, false);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.setAttribute('aria-hidden', true);\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * Before it begins typing\n\t   * @param {Typed} self\n\t   */\n\t  onBegin: function onBegin(self) {},\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","module.exports = require('./helpers/bundle-url').getBundleURL('1NsUM') + require('./helpers/bundle-manifest').resolve(\"3XrXP\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","soundFile","URL","sound","$bs8QT","Howl","src","html5","volume","Mousetrap","bind","toggleGame","e","preventDefault","returnValue","cmd","$ld51X","stringsElement","showCursor","typeSpeed","onComplete","self","backDelay","startDelay","runtime","R","I","O","T","G","a","m","s","H","N","setTimeout","o","b","c","substring","onkeydown","V","keyCode","ontouchstart","t","W","changedTouches","item","screenX","screen","width","Y","map","h","f","C","L","M","_","Math","floor","random","Q","P","Array","join","p","l","S","A","push","split","g","q","F","D","J","z","v","K","d","r","u","U","w","x","charCodeAt","E","y","eval","play","treeElem","document","getElementById","oElem","classList","contains","add","remove","toggle","HowlerGlobal","this","init","prototype","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","parseInt","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","e1","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","Promise","then","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","clearTimeout","handleSuspension","_resumeAfterSuspend","error","_autoplay","autoplay","_format","format","_html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","module","exports","$parcel$global","_super","_pos","_orientation","stereo","pan","pos","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","root","factory","modules","installedModules","__webpack_require__","moduleId","loaded","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_initializerJs","_htmlParserJs","Typed","elementId","options","instance","TypeError","_classCallCheck","initializer","begin","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","onDestroy","restart","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","onBegin","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","currentElContent","strings","sequence","_this2","fadeOut","el","fadeOutClass","humanize","humanizer","numChars","htmlParser","typeHtmlChars","pauseTime","substr","charAt","skip","temporaryPause","onTypingPaused","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","_this3","onStringTyped","complete","loopCount","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","isTyping","isBlinking","cursorBlinking","speed","shuffle","sort","_this5","className","fadeOutDelay","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","createElement","cursorChar","insertBefore","nextSibling","obj","_extends","assign","hasOwnProperty","_defaultsJs","_defaultsJs2","__esModule","default","Initializer","querySelector","tagName","elContent","getAttribute","isPaused","trim","style","display","children","stringsLength","stringEl","getCurrentElContent","autoInsertCss","appendAnimationCss","cssDataName","css","innerCss","body","appendChild","defaults","HTMLParser","curChar","endTag","_REVERSE_MAP","_MAP","_KEYCODE_MAP","_SHIFT_MAP","Ti","Hi","_i","Ri","Mi","Si","Ii","Oi","Ci","xi","ji","Fi","qi","Ei","Ni","Pi","Bi","Di","Gi","_SPECIAL_ALIASES","Xi","command","Li","escape","Ui","Qi","toString","callback","_bindMultiple","unbind","trigger","_directMap","_callbacks","stopCallback","element","_belongsTo","composedPath","initialEventTarget","isContentEditable","handleKey","_handleKey","addKeycodes","object","documentMousetrap","_addEvent","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","_isModifier","_pickBestAction","modifiers","_getReverseMap","_getKeyInfo","combination","_keysFromString","ancestor","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","modifiers1","modifiers2","matches","seq","metaKey","ctrlKey","deleteCombo","combo","deleteSequence","_fireCallback","srcElement","_preventDefault","stopPropagation","cancelBubble","_stopPropagation","_handleKeyEvent","altKey","_eventModifiers","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","wrappedCallback","_bindSingle","info","callbacks","maxLevel","processedSequenceCallback","ignoreThisKeypress","combinations","getBundleURL","resolve","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","stack","$f29cd6c67ea13581$var$getBundleURL"],"version":3,"file":"resume.300a59a9.js.map"}
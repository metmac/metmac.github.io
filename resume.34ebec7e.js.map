{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-e7cc743c5b208852.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","assets/animate.js","node_modules/typed.js/lib/typed.js","node_modules/mousetrap/mousetrap.js","node_modules/howler/src/howler.core.js","node_modules/@parcel/runtime-js/lib/runtime-221a9a5ed7780cd9.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kjD9z\\\":\\\"resume.34ebec7e.js\\\",\\\"6Hrp4\\\":\\\"easter-egg-coin.71923cb3.wav\\\"}\"));","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","let Typed = require('typed.js');\nlet Mice = require('mousetrap')\nimport { Howl, Howler } from 'howler/src/howler.core'\n\nlet soundFile = new URL(\"easter-egg-coin.wav\", import.meta.url)\nconst sound = new Howl({\n    src: [soundFile],\n    html5: true\n});\nsound.volume(0.4);\n\n// combinations\nMousetrap.bind('command+option+1', function () {\n    toggleGame();\n    return false;\n});\n\n\nMousetrap.bind('space', function (e) {\n    if (e.preventDefault) {\n        e.preventDefault();\n    } else {\n        // internet explorer\n        e.returnValue = false;\n    }\n});\n\n\nvar cmd = new Typed('#command', {\n    stringsElement: '#cmd',\n    showCursor: false,\n    typeSpeed: 5,\n    onComplete: function (self) {\n        var foo = new Typed('#skill-tree', {\n            stringsElement: '#skills-text',\n            showCursor: false,\n            typeSpeed: 40,\n            backDelay: 0,\n            startDelay: 250\n        });\n    }\n});\n\nfunction runtime() {\nR=1152,I=1134,O=36,T=0,G=[],a=[],m=[],e=[],s=32,H='innerHTML',N=setTimeout,o=(\ni,b,c)=>i.substring(b,c),onkeydown=e=>V('1----0-2'[e.keyCode-s]),ontouchstart=\nt=>V(W(t.changedTouches.item(0).screenX/screen.width*3)),Y=(m,a)=>{a.map(i=>{h=\no(h,0,i)+m+o(h,i+1,f.length)})},C=0,L=0;M=_=>(W=Math.floor)(Math.random()*_);Q=(\nP,b)=>Array(b+1).join(P),f=Q(' ',R),p=3,N(l='A=A.map(j=>((j+=O)>R)?M(O):j==I&&\\\nL&&p--&&j||j);v()&&N(l,S)',S=64);for(A=[];C<R;)C=A[A.length-1]||0,A.push(C+M(s)+\nS);P=['~(t=','.indexOf(k))?(n[H]=(++T+\"\").fontcolor(\"E35252\"),','.splice(t,1)\\\n):'],i=':S9S08W5W06S5_04T8S3R4T02T;Q<S01SJR02RKR03RKR04R7/5/5/7R05R7/5/5/4S\\\n06R7/5/4S1S07S6/5Z08S1Z3T09U:S0<S6S0?V0AR'.split(0),N(g='j=[];while(k=G.pop\\\n()){k-=O,eval(P.join(\"e\")+P.join(\"m\")+\"(k>0)?j.push(k):0\");if(~(z=a.indexOf(\\\nk)))a.splice(z,1)}G=j;q();v()&&N(g,s)',s),q=_=>{h=f,D=[A,[I],e,m,a,G];for(F in J\n='*A#\\\\ |')Y(J[F],D[F]);for(_=O+1,z=O;z<R/O*_;z+=_)h=o(h,0,z)+'\\n'+o(h,z);b[H]=\n!v()?'win!':h,K[H]=Q('A',p>0?p:(T=0,d(),p=3))},d=_=>{e=[],m=[],a=[],r=3*O;for(c\nof i){w=r;for(u in c){if((U=c[u])=='/')m.push(w),x=1;else{x=U.charCodeAt(0)-48,E\n=x<s?'a':(x-=s)&&'e';for(y=w;y<w+x;y++)+u&&eval(E+'.push(y)')}w+=x}r+=O}},V=e=>\nN(['I=Math.max(R-36,I-1)','G.push(I)', 'I=Math.min(R-1,I+1)'][e],q(),L=1),v=_=>\nT!=150;q(d()) // Brandon Freitag, (c) 2017, freitagbr.github.io/ritopls\n}\n\nfunction toggleGame() {\n    sound.play();\n    const treeElem = document.getElementById(\"tree-output\");\n    const oElem = document.getElementById(\"game\");\n    if (oElem.classList.contains('hidden')) {\n        treeElem.classList.add('hidden')\n        runtime();\n        oElem.classList.remove('hidden')\n        oElem.classList.remove('absolute')\n    } else {\n        treeElem.classList.toggle('hidden')\n        oElem.classList.toggle('hidden')\n        N = () => {}\n    }\n}\n\ndocument.getElementById('egg').addEventListener(\"click\", toggleGame);\n","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.12\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.options.onBegin(this);\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos >= curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing the current string\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, false);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.setAttribute('aria-hidden', true);\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * Before it begins typing\n\t   * @param {Typed} self\n\t   */\n\t  onBegin: function onBegin(self) {},\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n","module.exports = require('./helpers/bundle-url').getBundleURL('kjD9z') + require('./helpers/bundle-manifest').resolve(\"6Hrp4\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;"],"names":["require","register","JSON","parse","mapping","pairs","keys","Object","i","length","resolve","id","resolved","Error","module","exports","_howlerCore","Typed","Mice","soundFile","URL","sound","Howl","src","html5","volume","Mousetrap","bind","toggleGame","e","preventDefault","returnValue","cmd","stringsElement","showCursor","typeSpeed","onComplete","self","foo","backDelay","startDelay","runtime","R","I","O","T","G","a","m","s","H","N","setTimeout","o","b","c","substring","onkeydown","V","keyCode","ontouchstart","t","W","changedTouches","item","screenX","screen","width","Y","map","h","f","C","L","M","_","Math","floor","random","Q","P","Array","join","p","l","S","A","push","split","g","q","D","F","J","z","v","K","d","r","u","U","w","x","charCodeAt","E","y","eval","play","treeElem","document","getElementById","oElem","classList","contains","add","remove","toggle","webpackUniversalModuleDefinition","root","factory","define","amd","this","modules","installedModules","__webpack_require__","moduleId","loaded","call","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_initializerJs","_htmlParserJs","elementId","options","initializer","load","begin","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","destroy","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","onBegin","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","currentElContent","strings","sequence","_this2","fadeOut","el","fadeOutClass","humanize","humanizer","numChars","setPauseStatus","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","isTyping","isBlinking","cursorBlinking","speed","round","shuffle","sort","_this5","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","createElement","cursorChar","insertBefore","nextSibling","_extends","assign","source","hasOwnProperty","_interopRequireDefault","obj","__esModule","default","_defaultsJs","_defaultsJs2","Initializer","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","trim","style","display","slice","apply","children","stringsLength","stringEl","getCurrentElContent","autoInsertCss","appendAnimationCss","cssDataName","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag","window","_MAP","_KEYCODE_MAP","_SHIFT_MAP","$","_SPECIAL_ALIASES","option","command","return","escape","plus","mod","navigator","platform","_REVERSE_MAP","toString","_addEvent","object","callback","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","_modifiersMatch","modifiers1","modifiers2","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","_stopPropagation","stopPropagation","cancelBubble","_isModifier","_getReverseMap","_pickBestAction","action","_keysFromString","combination","replace","_getKeyInfo","_belongsTo","element","ancestor","targetElement","_callbacks","_directMap","_sequenceLevels","_resetTimer","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","matches","seq","deleteCombo","combo","deleteSequence","splice","_fireCallback","stopCallback","srcElement","_handleKey","callbacks","maxLevel","processedSequenceCallback","max","ignoreThisKeypress","_handleKeyEvent","handleKey","_resetSequenceTimer","clearTimeout","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","info","_bindMultiple","combinations","unbind","trigger","indexOf","composedPath","initialEventTarget","isContentEditable","addKeycodes","init","documentMousetrap","method","HowlerGlobal","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","_soundById","_node","mute","muted","unload","close","codecs","ext","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","checkSafari","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","e1","_autoResume","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","Promise","then","catch","console","warn","audio","suspend","_sounds","_paused","_suspendTimer","handleSuspension","_resumeAfterSuspend","error","_autoplay","autoplay","_format","format","_html5","_loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","url","location","protocol","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","duration","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","args","index","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","cancelScheduledValues","loopStart","loopEnd","playing","seekAndEmit","emitSeek","realTime","rateSeek","sounds","_errorFn","_loadFn","_endFn","remCache","cache","on","events","off","isId","isArray","msg","task","shift","ended","_drain","limit","cnt","_panner","isIOS","vendor","checkIE","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","decodeAudioData","XMLHttpRequest","open","responseType","forEach","setRequestHeader","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","appVersion","version","safari","global","getBundleURL","bundleURL","getBundleURLCached","stack","getBaseURL","getOrigin"],"version":3,"file":"resume.34ebec7e.js.map"}